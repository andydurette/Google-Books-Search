{"version":3,"sources":["utils/AppContext.js","components/Nav.js","components/BookSearch.js","components/BookTable.js","components/Home.js","components/SavedBooks.js","components/MessageModal.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["AppContext","createContext","AppProvider","props","useState","books","setBooks","savedBooks","setSavedBooks","fetching","setFetching","searching","setSearching","modalState","setModalState","modalCopyState","setModalCopyState","Provider","value","bookData","savedBookData","fetchData","search","modal","modalCopy","children","Nav","className","to","exact","BookSearch","useContext","API","fetch","method","body","JSON","stringify","headers","res","json","Fragment","type","placeholder","onChange","e","target","onKeyPress","key","handleKeyPress","onClick","BookTable","id","idInfo","items","filter","data","idInfopass","title","volumeInfo","description","authors","imgUrl","imageLinks","thumbnail","linkUrl","infoLink","status","setTimeout","map","book","author","toString","preventDefault","window","open","data-id","getAttribute","src","alt","width","Home","SavedBooks","jsonId","console","log","bookId","useEffect","MessageModal","Footer","year","Date","getFullYear","App","path","activeClassName","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ecc3f672.chunk.js","sourcesContent":["import React, {useState, createContext} from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = props => {\r\n\r\n//Initially data called from API\r\nconst [books, setBooks] = useState({}); \r\n// Saved book data\r\nconst [savedBooks, setSavedBooks] = useState('');\r\n//State check to see if it's done being called\r\nconst [fetching, setFetching] = useState(false); \r\n// Set search data\r\nconst [searching, setSearching] = useState(\"\"); \r\n// Set Modal state and message\r\nconst [modalState, setModalState] = useState(\"\"); \r\nconst [modalCopyState, setModalCopyState] = useState(\"\"); \r\n\r\n  return(\r\n    <AppContext.Provider value={{ \r\n      bookData: [books, setBooks],\r\n      savedBookData: [savedBooks, setSavedBooks],\r\n      fetchData: [fetching, setFetching], \r\n      search: [searching, setSearching], \r\n      modal: [modalState, setModalState],\r\n      modalCopy: [modalCopyState, setModalCopyState]\r\n      }}>\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav>\r\n      <p>Google Books</p>\r\n      <ul className=\"nav-links\">\r\n        <NavLink to='/' exact>\r\n        <li>Home</li>\r\n        </NavLink>\r\n        <NavLink to='/saved'>\r\n        <li>Saved</li>\r\n        </NavLink>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav","import React,{useContext} from 'react';\r\nimport { AppContext } from '../utils/AppContext';\r\n\r\nconst BookSearch = () => {\r\n\r\n  const {search, bookData, fetchData, modalCopy} = useContext(AppContext);\r\n  // eslint-disable-next-line\r\n  let [books, setBooks] =  bookData;\r\n  let [fetching, setFetching] =  fetchData;\r\n  let [searching, setSearching] =  search;\r\n  let [modalcopyState, setModalCopyState] =  modalCopy;\r\n\r\n  const handleChange = e => {\r\n    setSearching( searching = e.target.value);\r\n  };\r\n\r\n  const API = {\r\n\r\n    async booksCall() {\r\n      if( searching === ''){\r\n\r\n      }else{\r\n        const res = await fetch(\"/api/books\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({searching}),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n        });\r\n    \r\n       const json = await res.json();\r\n          setBooks(books = json);\r\n          if (fetching === false){\r\n            setFetching(fetching = true)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n   let handleKeyPress = (e) => {\r\n      if(e.key === 'Enter'){\r\n       API.booksCall();\r\n      }\r\n    }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <header>\r\n        <h1>Google Books Search</h1>\r\n      </header>\r\n\r\n      <section className=\"filterBar\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Filter by book name...\"\r\n          value={searching}\r\n          onChange={handleChange}\r\n          onKeyPress={(e) => handleKeyPress(e)}\r\n        />\r\n        <button onClick={() => API.booksCall() }>Search</button>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default BookSearch","import React, {useContext} from 'react';\r\nimport { AppContext } from '../utils/AppContext';\r\n\r\nconst BookTable = () => {\r\n\r\n  // Grab Search data to filter against\r\n  const {bookData, fetchData, modal, modalCopy} = useContext(AppContext);\r\n  let [fetching/*, setFetching*/] =  fetchData;\r\n  // eslint-disable-next-line\r\n  let [modalState, setModalState] =  modal;\r\n  // eslint-disable-next-line\r\n  let [modalCopyState, setModalCopyState] =  modalCopy;\r\n\r\n  const API = {\r\n    async saveBooks(id) {\r\n\r\n      let idInfo = bookData[0].items.filter(data => data.id === id);\r\n\r\n      let idInfopass = {\r\n        id: idInfo[0].id,\r\n        title: idInfo[0].volumeInfo.title,\r\n        description: idInfo[0].volumeInfo.description,\r\n        authors: idInfo[0].volumeInfo.authors,\r\n        imgUrl: idInfo[0].volumeInfo.imageLinks.thumbnail,\r\n        linkUrl: idInfo[0].volumeInfo.infoLink,\r\n      }\r\n\r\n      //console.log(idInfopass);\r\n\r\n        const res = await fetch(\"/api/saveBooks\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(idInfopass),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n        });\r\n\r\n        // eslint-disable-next-line\r\n        const json = await res;\r\n\r\n        if(json.status === 200){\r\n          setModalState( modalState = \"\");\r\n          setModalCopyState( modalCopyState = \"Book added to saved books.\");\r\n          setTimeout(() =>{ setModalState( modalState = \"set\") }, 500);\r\n          setTimeout(() =>{ setModalState( modalState = \"\") }, 3000);\r\n          setTimeout(() =>{ setModalState( modalState = \"hide\") }, 3500);\r\n        }else if(json.status === 304){\r\n          setModalState( modalState = \"\");\r\n          setModalCopyState( modalCopyState = \"Book already in saved books.\");\r\n          setTimeout(() =>{ setModalState( modalState = \"not-set\") }, 500);\r\n          setTimeout(() =>{ setModalState( modalState = \"\") }, 3000);\r\n          setTimeout(() =>{ setModalState( modalState = \"hide\") }, 3500);\r\n        }else{\r\n          setModalState( modalState = \"\");\r\n          setModalCopyState( modalCopyState = \"Error action at this time cannot be completed.\");\r\n          setTimeout(() =>{ setModalState( modalState = \"not-set\") }, 500);\r\n          setTimeout(() =>{ setModalState( modalState = \"\") }, 3000);\r\n          setTimeout(() =>{ setModalState( modalState = \"hide\") }, 3500);\r\n        }\r\n      }\r\n    }\r\n\r\n  return(\r\n    <section id=\"searchedBooks\">\r\n      {fetching === false ?  \r\n       ''\r\n        : (\r\n          <React.Fragment>\r\n          {bookData[0].items.map((book) => (\r\n            <div className=\"book\" key={book.id}>\r\n              <h3>{book.volumeInfo.title}</h3>\r\n              <h4>Written By: {\r\n                (book.volumeInfo.authors ) ? \r\n                book.volumeInfo.authors.map((author) => ` ${author}`).toString() :\r\n                  \" Not Provided\"\r\n              }</h4>\r\n              <div className=\"book-info\">\r\n                <div className=\"book-buttons\">\r\n                  <button onClick={(e) => {\r\n                    e.preventDefault();\r\n                    window.open(book.volumeInfo.infoLink);\r\n                    }}>View\r\n                  </button>\r\n                  <button data-id={book.id} onClick={(e) => API.saveBooks(e.target.getAttribute(\"data-id\"))}>Save</button>\r\n                </div>\r\n                <div>{ (book.volumeInfo.imageLinks ? \r\n                <img src={book.volumeInfo.imageLinks.thumbnail} alt=\"book.volumeInfo.title\"/>\r\n                : <img src=\"./content/img/not-found.jpg\" alt=\"Not Found\" width=\"150\"/> )}</div>\r\n                <div>{ (book.volumeInfo.description ? <p>{book.volumeInfo.description}</p>: <p>No description has been provided for this book.</p> )}</div>\r\n                \r\n                </div>\r\n              </div>  \r\n          ))}\r\n        </React.Fragment>\r\n      )}\r\n    </section>\r\n    )\r\n  }; \r\n  \r\n  export default BookTable","import React from 'react';\r\nimport BookSearch from './BookSearch';\r\nimport BookTable from './BookTable';\r\n\r\nfunction Home() {\r\n  return (\r\n    <React.Fragment>\r\n      <BookSearch />\r\n      <BookTable />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, {useEffect, useContext} from 'react';\r\nimport { AppContext } from '../utils/AppContext';\r\n\r\n\r\nfunction SavedBooks() {\r\n\r\n// Call Context \r\nconst {savedBookData, modal, modalCopy} = useContext(AppContext);\r\n// Handle mobile class for operating menu\r\nlet [savedBooks, setSavedBooks] = savedBookData;\r\n// eslint-disable-next-line\r\nlet [modalState, setModalState] =  modal;\r\n// eslint-disable-next-line\r\nlet [modalCopyState, setModalCopyState] =  modalCopy;\r\n\r\n  const API = {\r\n    async savedBooks() {\r\n      const res = await fetch(`/api/savedBooks`);\r\n      const json = await res.json();\r\n     // console.log(json)\r\n      setSavedBooks( savedBooks = json);\r\n    },\r\n    async removeBook(id) {\r\n      \r\n      // Convert to json syntax\r\n      let jsonId = {id: id}\r\n\r\n      const res = await fetch(\"/api/removeBook\", {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(jsonId),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n        });\r\n\r\n        const json = await res;\r\n        console.log(json);\r\n\r\n        if(json.status === 200){\r\n          setModalState( modalState = \"\");\r\n          setModalCopyState( modalCopyState = \"Book removed from saved books.\");\r\n          setTimeout(() =>{ setModalState( modalState = \"set\") }, 500);\r\n          setTimeout(() =>{ setModalState( modalState = \"\") }, 3000);\r\n          setTimeout(() =>{ setModalState( modalState = \"hide\") }, 3500);\r\n          setSavedBooks( savedBooks = savedBooks.filter(data => data.bookId !== id) );\r\n        }else{\r\n          setModalState( modalState = \"\");\r\n          setModalCopyState( modalCopyState = \"Error action at this time cannot be completed.\");\r\n          setTimeout(() =>{ setModalState( modalState = \"not-set\") }, 500);\r\n          setTimeout(() =>{ setModalState( modalState = \"\") }, 3000);\r\n          setTimeout(() =>{ setModalState( modalState = \"hide\") }, 3500);\r\n        }\r\n    }\r\n  }\r\n\r\n  /********************************************* Call lifecycle methods *********************************************/\r\n\r\n  useEffect(() => {\r\n   API.savedBooks();\r\n   // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  return(\r\n    <section id=\"savedBooks\">\r\n      <header><h1>Google Books Saved</h1></header>\r\n      {savedBooks === '' ?  \r\n       ''\r\n        : (\r\n          <React.Fragment>\r\n            \r\n          {savedBookData[0].map((book) => (\r\n            <div className=\"book\" key={book.bookId}>\r\n              <h3>{book.title}</h3>\r\n              <h4>Written By: {\r\n                (book.authors ) ? \r\n                book.authors.map((author) => ` ${author}`).toString() :\r\n                  \" Not Provided\"\r\n              }</h4>\r\n              <div className=\"book-info\">\r\n                <div className=\"book-buttons\">\r\n                  <button onClick={(e) => {\r\n                    e.preventDefault();\r\n                    window.open(book.linkUrl);\r\n                    }}>View\r\n                  </button>\r\n                  <button data-id={book.bookId} onClick={(e) => API.removeBook(e.target.getAttribute(\"data-id\"))}>Delete</button>\r\n                </div>\r\n                <div>{ (book.imgUrl ? \r\n                <img src={book.imgUrl} alt=\"book.volumeInfo.title\"/>\r\n                : <img src=\"./content/img/not-found.jpg\" alt=\"Not Found\" width=\"150\"/> )}</div>\r\n                <div>{ (book.description ? <p>{book.description}</p>: <p>No description has been provided for this book.</p> )}</div>\r\n                \r\n                </div>\r\n              </div>  \r\n          ))}\r\n        </React.Fragment>\r\n      )}\r\n    </section>\r\n    )\r\n  }; \r\n\r\nexport default SavedBooks;","import React, {useContext} from 'react';\r\nimport { AppContext } from '../utils/AppContext';\r\n\r\nfunction MessageModal() {\r\n\r\n  const {modal, modalCopy} = useContext(AppContext);\r\n  let [modalState/*, setModalState*/] =  modal;\r\n  let [modalCopyState /*, setModalCopyState */] =  modalCopy;\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <section id=\"MessageModal\" className={ modalState }>\r\n        <p id=\"ModalMessage\">{modalCopyState}</p>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MessageModal","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n// Sets year in footer copyright\r\nlet year = new Date().getFullYear();\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <footer>\r\n        <p id=\"copyright\">Copyright © Andy Durette {year}</p>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport \"./scss/App.scss\";\r\nimport {AppProvider} from './utils/AppContext';\r\nimport Nav from './components/Nav';\r\nimport Home from './components/Home';\r\nimport SavedBooks from './components/SavedBooks';\r\nimport MessageModal from './components/MessageModal';\r\nimport Footer from './components/Footer';\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppProvider> \r\n      <Router>\r\n      <div className=\"App\">\r\n        <Nav />\r\n        <section id=\"wrapper\"> \r\n          <div id=\"wrapper-contents\">  \r\n          <Switch>\r\n            <Route path=\"/\" exact activeClassName='is-active' component={Home}></Route>\r\n            <Route path=\"/saved\" activeClassName='is-active' component={SavedBooks}></Route>\r\n          </Switch>\r\n          </div>\r\n        <Footer/>\r\n        </section>\r\n        <MessageModal/>\r\n      </div>\r\n      </Router>\r\n    </AppProvider> \r\n  );\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}